var documenterSearchIndex = {"docs":
[{"location":"installation/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"In order to install this package, ","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"(v1.10) pkg> add https://github.com/IvanKuznetsoff/VectorPSFs.jl","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"using VectorPSFs","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"(Or just clone the whole project in the root directory and type include(\"src/VectorPSFs.jl\") in your own project, followed by using .VectorPSFs.)","category":"page"},{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"#ToC","page":"Home","title":"ToC","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"installation.md\"\n    \"example.md\"\n]\nDepth = 1","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"VectorPSFs.jl provides tools for computing vectorial point spread functions (PSFs), with or without aberrations, caused by ray transmission through a plane-parallel plate.  It is particularly optimized for calculating the PSFs of NV centers. The package also enables the quantification of aberration effects by computing Strehl ratios and determining plate thicknesses that achieve the diffraction limit (Strehl ratio > 0.8). ","category":"page"},{"location":"","page":"Home","title":"Home","text":"For PSF conditionings, follow these steps:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Define microscope objectives using Objective objects, specifying parameters such as numerical aperture, immersion medium, and focal length.\nConstruct plane-parallel plates (e.g., diamond) using Sellmeier dispersion models.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Submodules-and-Key-Components","page":"Home","title":"Submodules and Key Components","text":"","category":"section"},{"location":"#1.-Objectives","page":"Home","title":"1. Objectives","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The file objectives.jl defines a simple Objective struct that encapsulates:","category":"page"},{"location":"","page":"Home","title":"Home","text":"f: focal length (e.g. 2000 μm),\nNA: numerical aperture (dimensionless),\nn: refractive index in the immersion medium (e.g. 1.0 for air, 1.515 for oil, etc.).","category":"page"},{"location":"","page":"Home","title":"Home","text":"Some standard objectives are provided as convenience constructors:","category":"page"},{"location":"","page":"Home","title":"Home","text":"MPlanApo100x()\nLMPLFLN100XBD()\nMPlanApo50x()\nM10x()\nUPLXAPO100X()","category":"page"},{"location":"","page":"Home","title":"Home","text":"Example Usage:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using VectorPSFs\n\nobj = MPlanApo100x()  # f=2000, NA=0.7, n=1.0","category":"page"},{"location":"#2.-Plane-Parallel-Plates","page":"Home","title":"2. Plane-Parallel Plates","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The file plane_parallel_plates.jl provides:","category":"page"},{"location":"","page":"Home","title":"Home","text":"A PlaneParallelPlate struct:  \nt (thickness in micrometers, μm)\nn_λ (a function giving refractive index vs. wavelength λ in micrometers)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Predefined materials using Sellmeier equations include:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Diamond(t), FusedSilica(t), BorosilicateCrown(t), Sapphire(t), MagnesiumFluoride(t), and a CustomPlate(t, B, C) for user-supplied Sellmeier coefficients.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Example Usage:","category":"page"},{"location":"","page":"Home","title":"Home","text":"plate_diamond = Diamond(100.0)  # 100 μm-thick diamond plate\nplate_bk7     = BorosilicateCrown(250.0)  # BK7 plate, 250 μm thick","category":"page"},{"location":"#3.-PSF-Computations","page":"Home","title":"3. PSF Computations","text":"","category":"section"},{"location":"#3.1-High-level-PSF-functions","page":"Home","title":"3.1 High-level PSF functions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"PSF(x, y, z, ...) is defined in multiple overloads:","category":"page"},{"location":"","page":"Home","title":"Home","text":"No plate, no objective (simple, air):\nPSF(x, y, z, λ, NA; rtol=1e-3, atol=1e-4)\nNo plate, with objective (aberration-free, immersion):\nPSF(x, y, z, λ, obj::Objective; rtol=1e-3, atol=1e-4)\nNormal-incidence plate, no objective:\nPSF(x, y, z, λ, NA, plate::PlaneParallelPlate; ...)\nNormal-incidence plate, with objective:\nPSF(x, y, z, λ, obj::Objective, plate::PlaneParallelPlate; ...)\nTilted-incidence plate, no objective:\nPSF(x, y, z, λ, NA, plate::PlaneParallelPlate, α; ...)\nTilted-incidence plate, with objective:\nPSF(x, y, z, λ, obj::Objective, plate::PlaneParallelPlate, α; ...)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(x, y, z) are spatial coordinates (in μm), λ is wavelength in micrometers, NA is the numerical aperture, α is the tilt angle in radians.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The various rtol/atol arguments control the tolerance in the numerical integration (via HCubature).","category":"page"},{"location":"","page":"Home","title":"Home","text":"Example (Normal incidence, plate, objective):","category":"page"},{"location":"","page":"Home","title":"Home","text":"using VectorPSFs\n\nobj = MPlanApo50x()           # e.g. 50x objective\nplate = Diamond(50.0)         # 50 μm diamond\nλ = 0.632                     # 632 nm = 0.632 μm\npsf_val = PSF(0.0, 0.0, 0.0, λ, obj, plate)  \nprintln(\"PSF on-axis intensity: \", psf_val)","category":"page"},{"location":"#3.2-PSFParams-Structures","page":"Home","title":"3.2 PSFParams Structures","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"PSFParams wraps the relevant parameters (wavelength, objective, plate, tilt) along with a type marker PSFMode indicating whether it is NoAberration, NormalIncidence, or TiltedIncidence. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can construct it like so:","category":"page"},{"location":"","page":"Home","title":"Home","text":"No plate:\nparam = PSFParams(0.632, MPlanApo100x())\nI = PSF(x, y, z, param)\nNormal incidence:\nparam = PSFParams(0.532, MPlanApo50x(), Diamond(100.0))\nI = PSF(0.0, 0.0, 1.0, param)\nTilted incidence:\nparam = PSFParams(0.532, MPlanApo50x(), Diamond(100.0), α=0.1)\nI = PSF(0.0, 0.0, 1.0, param)","category":"page"},{"location":"#4.-NV-Center-Emission-Spectrum","page":"Home","title":"4. NV-Center Emission Spectrum","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"In NVspectrum.jl, the module defines arrays of wavelength and corresponding raw spectrum data, then creates a smoothing spline (nv_spectrum_spline).","category":"page"},{"location":"","page":"Home","title":"Home","text":"An NVCenter struct stores:","category":"page"},{"location":"","page":"Home","title":"Home","text":"struct NVCenter\n    λs::Vector{Float64}   \n    weight::Vector{Float64}\nend","category":"page"},{"location":"","page":"Home","title":"Home","text":"and you can construct it in multiple ways. A typical usage is:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using VectorPSFs\n\nnv_default = NVCenter(NVspectrum.wavelength)  # uses the default spline","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then, you can compute the polychromatic PSF from an NV emitter using:","category":"page"},{"location":"","page":"Home","title":"Home","text":"PSF(x, y, z, obj::Objective, nv::NVCenter; rtol, atol)\nPSF(x, y, z, obj::Objective, nv::NVCenter, plate::PlaneParallelPlate; ...)\nPSF(x, y, z, obj::Objective, nv::NVCenter, plate::PlaneParallelPlate, α; ...)","category":"page"},{"location":"","page":"Home","title":"Home","text":"It integrates over all wavelengths in nv.λs, weighting each by nv.weight.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Example (NV center with objective and diamond plate):","category":"page"},{"location":"","page":"Home","title":"Home","text":"using VectorPSFs\n\nobj       = MPlanApo100x()\nplate     = Diamond(100.0)\nnvcenter  = NVCenter(NVspectrum.wavelength)  # or simply NVCenter(NVspectrum.wavelength)\nx, y, z   = 0.0, 0.0, 0.0\npsf_intensity = PSF(x, y, z, obj, nvcenter, plate)\nprintln(\"Weighted PSF from NV-center emission = \", psf_intensity)","category":"page"},{"location":"#5.-Strehl-Ratio-Computations","page":"Home","title":"5. Strehl Ratio Computations","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The strehl.jl file provides strehl(...) methods that:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Compute on-axis intensity (x=0, y=0) as a function of defocus z.\nFind the maximum intensity in a given zrange.\nNormalize by the unaberrated (or reference) case to get a Strehl ratio.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Method signatures:","category":"page"},{"location":"","page":"Home","title":"Home","text":"strehl(t::Float64, λ::Float64, obj::Objective;\n       plate::Function=Diamond, zrange=[-2.0, 4.0], rtol=1e-10, atol=1e-10)\n\nstrehl(t::Float64, λ::Float64, obj::Objective, plate::Function, α::Float64;\n       zrange=[-2.0, 4.0], ...)\n\nstrehl(t::Float64, λ::Float64, obj::Objective, z_est::Float64;\n       plate::Function=Diamond, ...)\n\nstrehl(t::Float64, λ::Float64, obj::Objective, z_est::Float64,\n       plate::Function, α::Float64; ...)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Here,","category":"page"},{"location":"","page":"Home","title":"Home","text":"t is plate thickness,\nλ is wavelength (μm),\nobj is the Objective,\nα is tilt angle (optional),\nz_est is a user-chosen defocus for direct evaluation,\nzrange is a bracket around which we do a 1D optimization for the best focus.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Example:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using VectorPSFs, Optim\n\nobj = UPLXAPO100X()         # e.g. NA=1.45, n=1.515\nλ   = 0.637                 # 637 nm\n# Find the Strehl ratio for a 50 μm diamond plate:\nS = strehl(50.0, λ, obj, Diamond; zrange=[-5.0, 5.0])\nprintln(\"Strehl ratio = \", S)","category":"page"},{"location":"#6.-Finding-Plate-Thickness-for-Desired-Strehl","page":"Home","title":"6. Finding Plate Thickness for Desired Strehl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"maxtol_thick(...) searches for a thickness t in a given range such that the Strehl ratio is as close to 0.8 (or any built-in target) as possible.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Two variants exist (normal incidence vs. tilted):","category":"page"},{"location":"","page":"Home","title":"Home","text":"maxtol_thick(λ::Float64, obj::Objective; plate::Function=Diamond, t_range=(0.0, 500.), ...)\nmaxtol_thick(λ::Float64, obj::Objective, plate::Function, α::Float64; t_range=(0.0, 500.), ...)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Example:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using VectorPSFs, Optim\n\nobj = MPlanApo100x()\nλ   = 0.637\nt_star = maxtol_thick(λ, obj, Diamond; t_range=(0.0, 200.0))\nprintln(\"Thickness achieving Strehl ≈ 0.8: \", t_star, \" μm\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Example-Workflows","page":"Home","title":"Example Workflows","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Below is a more complete sequence showcasing key steps:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using VectorPSFs, Optim\n\n# 1. Define your objective and plate\nobj    = MPlanApo100x()          # 100x objective, NA=0.7, n=1.0\nplate  = Diamond(50.0)           # 50 μm diamond\n\n# 2. Choose wavelength (in μm)\nλ_red  = 0.637                   # 637 nm\n\n# 3. Compute on-axis PSF with/without plate\npsf_no_plate     = PSF(0.0, 0.0, 0.0, λ_red, obj)           # no plate\npsf_with_plate   = PSF(0.0, 0.0, 0.0, λ_red, obj, plate)    # normal-incidence diamond\n\nprintln(\"On-axis, no plate:     \", psf_no_plate)\nprintln(\"On-axis, with plate:   \", psf_with_plate)\n\n# 4. Evaluate PSF off-axis\nx, y, z = 0.5, 0.5, 1.0\nval_off_axis = PSF(x, y, z, λ_red, obj, plate)\nprintln(\"PSF at (x,y,z) = (0.5, 0.5, 1.0): \", val_off_axis)\n\n# 5. Compute Strehl ratio for t=50 μm diamond\nS_50 = strehl(50.0, λ_red, obj, Diamond; zrange=[-2.0, 2.0])\nprintln(\"Strehl ratio at t=50 μm: \", S_50)\n\n# 6. Find thickness that yields ~0.8 Strehl\nt_star = maxtol_thick(λ_red, obj, Diamond; t_range=(0.0, 200.0))\nprintln(\"Thickness achieving ~0.8 Strehl: \", t_star)","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#NV-Center-Example","page":"Home","title":"NV-Center Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A polychromatic PSF, summing over the NV emission:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using VectorPSFs\n\n# Create an NVCenter (already has an internal spline from 460 nm to ~810 nm)\nnv = NVCenter(NVspectrum.wavelength)\n\n# Define objective and plate\nobj = MPlanApo100x()\ndiamond_plate = Diamond(100.0)\n\n# Compute polychromatic PSF at on-axis, z=0\npsf_nv = PSF(0.0, 0.0, 0.0, obj, nv, diamond_plate)\nprintln(\"NV-center weighted PSF intensity: \", psf_nv)","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Concluding-Remarks","page":"Home","title":"Concluding Remarks","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"VectorPSFs.jl merges vectorial diffraction integrals, plate-dispersion modeling, and NV-center polychromatic weighting. The user can explore multiple incidence angles (α), different defocus values, and optimize over plate thickness or defocus to understand aberrations. The code is heavily based on numerical integration via HCubature and often uses Optim (Brent method) for 1D optimization tasks (finding best focus, searching for thickness).","category":"page"},{"location":"","page":"Home","title":"Home","text":"Key Exports:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Objectives: MPlanApo100x, LMPLFLN100XBD, MPlanApo50x, M10x, UPLXAPO100X\nPlates: Diamond, FusedSilica, BorosilicateCrown, Sapphire, MagnesiumFluoride, CustomPlate\nPSF function family\nStrehl ratio routines: strehl(...)\nThickness finder: maxtol_thick(...)\nNV-center spline: nv_spectrum_spline, NVCenter(...)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Feel free to adjust tolerances (rtol, atol) as needed for speed vs. accuracy. If performing repeated calls (e.g., scanning x, y, z grids), you may wish to cache results or consider a higher-level approach to manage performance.","category":"page"},{"location":"","page":"Home","title":"Home","text":"That covers the main functionality and usage of VectorPSFs.jl!","category":"page"},{"location":"example/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"PSF(x, y, z, ...) is defined in multiple overloads:","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"No plate, direct calculation (simple, air):\nPSF(x, y, z, λ, NA; rtol=1e-3, atol=1e-4)\nNo plate, with objective specification (aberration-free, immersion):\nPSF(x, y, z, λ, obj::Objective; rtol=1e-3, atol=1e-4)\nNormal-incidence plate, with objective:\nPSF(x, y, z, λ, obj::Objective, plate::PlaneParallelPlate; ...)\nTilted-incidence plate, with objective:\nPSF(x, y, z, λ, obj::Objective, plate::PlaneParallelPlate, α; ...)","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"(x, y, z) are spatial coordinates (in μm), λ is wavelength in micrometers, NA is the numerical aperture, α is the tilt angle in radians.","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"The kwargs rtol/atol control the tolerance in the numerical integration (via HCubature).","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"Example (Normal incidence, plate, objective):","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"using VectorPSFs\n\nobj = MPlanApo50x()           # e.g. 50x objective\nplate = Diamond(50.0)         # 50 μm diamond\nλ = 0.632                     # 632 nm = 0.632 μm\npsf_val = PSF(0.0, 0.0, 0.0, λ, obj, plate)  \nprintln(\"PSF on-axis intensity: \", psf_val)","category":"page"},{"location":"example/#5.-Strehl-Ratio-Computations","page":"Examples","title":"5. Strehl Ratio Computations","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"The strehl.jl file provides strehl(...) methods that:","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"Compute on-axis intensity (x=0, y=0) as a function of defocus z.\nFind the maximum intensity in a given zrange.\nNormalize by the unaberrated (or reference) case to get a Strehl ratio.","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"Method signatures:","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"strehl(t::Float64, λ::Float64, obj::Objective;\n       plate::Function=Diamond, zrange=[-2.0, 4.0], rtol=1e-10, atol=1e-10)\n\nstrehl(t::Float64, λ::Float64, obj::Objective, plate::Function, α::Float64;\n       zrange=[-2.0, 4.0], ...)\n\nstrehl(t::Float64, λ::Float64, obj::Objective, z_est::Float64;\n       plate::Function=Diamond, ...)\n\nstrehl(t::Float64, λ::Float64, obj::Objective, z_est::Float64,\n       plate::Function, α::Float64; ...)","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"Here,","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"t is plate thickness,\nλ is wavelength (μm),\nobj is the Objective,\nα is tilt angle (optional),\nz_est is a user-chosen defocus for direct evaluation,\nzrange is a bracket around which we do a 1D optimization for the best focus.","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"Example:","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"using VectorPSFs, Optim\n\nobj = UPLXAPO100X()         # e.g. NA=1.45, n=1.515\nλ   = 0.637                 # 637 nm\n# Find the Strehl ratio for a 50 μm diamond plate:\nS = strehl(50.0, λ, obj, Diamond; zrange=[-5.0, 5.0])\nprintln(\"Strehl ratio = \", S)","category":"page"}]
}
